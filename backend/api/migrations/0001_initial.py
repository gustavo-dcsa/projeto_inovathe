# Generated by Django 5.2.5 on 2025-08-10 01:43

import api.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "role",
                    models.CharField(
                        choices=[("user", "User"), ("admin", "Admin")],
                        default="user",
                        max_length=10,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="CalendarEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Idea",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=api.models.generate_idea_id,
                        editable=False,
                        max_length=11,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("submitted", "Submitted"),
                            ("in_department_review", "In Department Review"),
                            ("in_committee_review", "In Committee Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("implemented", "Implemented"),
                        ],
                        default="submitted",
                        max_length=50,
                    ),
                ),
                ("submitted_by_email", models.EmailField(max_length=254)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("full_name", models.CharField(max_length=255)),
                (
                    "submission_type",
                    models.CharField(
                        choices=[
                            ("Apenas eu", "Apenas eu"),
                            ("Com minha equipe", "Com minha equipe"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "team_members",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "business_unit",
                    models.CharField(
                        choices=[
                            ("Operadora Unimed", "Operadora Unimed"),
                            ("Operadora Intermed", "Operadora Intermed"),
                            (
                                "Hospital Unimed Primavera (HUP)",
                                "Hospital Unimed Primavera (HUP)",
                            ),
                            (
                                "Centro Integrado Ilhotas (CIS)",
                                "Centro Integrado Ilhotas (CIS)",
                            ),
                            ("Unihome", "Unihome"),
                            ("Unimed Parnaíba", "Unimed Parnaíba"),
                            ("Intermed Parnaíba", "Intermed Parnaíba"),
                            ("TheAcolher", "TheAcolher"),
                        ],
                        max_length=100,
                    ),
                ),
                ("department", models.CharField(max_length=100)),
                ("position", models.CharField(max_length=100)),
                (
                    "idea_category",
                    models.CharField(
                        choices=[
                            (
                                "Inovação de Produto/Serviço",
                                "Inovação de Produto/Serviço",
                            ),
                            ("Melhoria de Processo", "Melhoria de Processo"),
                            ("Redução de Custos", "Redução de Custos"),
                            ("Aumento de Produtividade", "Aumento de Produtividade"),
                            ("Satisfação do Cliente", "Satisfação do Cliente"),
                            (
                                "Bem-estar dos Colaboradores",
                                "Bem-estar dos Colaboradores",
                            ),
                            ("Sustentabilidade", "Sustentabilidade"),
                            ("Tecnologia", "Tecnologia"),
                            ("Outro", "Outro"),
                        ],
                        max_length=100,
                    ),
                ),
                ("expected_benefits", models.TextField()),
                ("required_resources", models.TextField(blank=True, null=True)),
                (
                    "estimated_impact",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Baixo", "Baixo"),
                            ("Médio", "Médio"),
                            ("Alto", "Alto"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "implementation_timeline",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Curto prazo (até 3 meses)", "Curto prazo (até 3 meses)"),
                            ("Médio prazo (3 a 6 meses)", "Médio prazo (3 a 6 meses)"),
                            (
                                "Longo prazo (mais de 6 meses)",
                                "Longo prazo (mais de 6 meses)",
                            ),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "inspiration",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("additional_comments", models.TextField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ideas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IdeaFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("feedback_text", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedbacks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "idea",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback",
                        to="api.idea",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NewsArticle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("content", models.TextField()),
                ("source_url", models.URLField(blank=True, null=True)),
                (
                    "published_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="articles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventRsvp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rsvps",
                        to="api.calendarevent",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rsvps",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("event", "user")},
            },
        ),
        migrations.CreateModel(
            name="IdeaLike",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "idea",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to="api.idea",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("idea", "user")},
            },
        ),
    ]
